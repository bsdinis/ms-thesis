@inproceedings {avocado-atc21,
author = {Maurice Bailleu and Dimitra Giantsidi and Vasilis Gavrielatos and Do Le Quoc and Vijay Nagarajan and Pramod Bhatotia},
title = {Avocado: A Secure {In-Memory} Distributed Storage System},
booktitle = {2021 USENIX Annual Technical Conference (USENIX ATC 21)},
year = {2021},
isbn = {978-1-939133-23-6},
pages = {65--79},
publisher = {USENIX Association},
month = jul,
}

@inproceedings{rote,
    author    = "Matetic, Sinisa and Mansoor, Ahmed and Kostiainen, Kari and Dhar, Aritra and Sommer, David and Gervais, Arthur and Juels, Ari and Capkun, Srdjan",
    title     = "{ROTE}: Rollback Protection for Trusted Execution",
    booktitle = "Proc. of the 26th Usenix Security Symposium ",
    year      = 2017,
}

@article{intelsgx,
    title={Intel {SGX} Explained},
    author={Victor Costan and Srinivas Devadas},
    journal={IACR Cryptol. ePrint Arch.},
    year={2016},
    volume={2016},
    pages={86}
}

@inproceedings{ycsb,
    author = {Cooper, Brian F. and Silberstein, Adam and Tam, Erwin and Ramakrishnan, Raghu and Sears, Russell},
    title = {Benchmarking Cloud Serving Systems with YCSB},
    year = {2010},
    isbn = {9781450300360},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/1807128.1807152},
    doi = {10.1145/1807128.1807152},
    booktitle = {Proceedings of the 1st ACM Symposium on Cloud Computing},
    pages = {143–154},
    numpages = {12},
    keywords = {benchmarking, cloud serving database},
    location = {Indianapolis, Indiana, USA},
    series = {SoCC ’10}
}

@misc{intel_pmem,
    title        = "Persistent Memory Programming",
    year         = 2021,
    howpublished = "\url{https://pmem.io}",
    OPTnote         = "Accessed: 2021-10-13"
}

@misc{inteltdx,
    title        = "{Intel} Trust Domain Extensions",
    author       = "Intel",
    year         = 2020,
    howpublished = "White paper PRD29-GENC-009492C",
    OPTnote         = "Accessed: 2021-05-04"
}

@misc{armTZ,
    title        = "{ARM} Security Technology. {B}uilding a Secure
    System using TrustZone Technology",
    author       = "ARM",
    year         = 2009,
    howpublished = "White paper PRD29-GENC-009492C",
    OPTnote         = "Accessed: 2020-05-19"
}

@misc{icelake,
    title        = "Intel Xeon Scalable Platform Built for Most Sensitive Workloads",
    OPTauthor       = "David Kaplan and Jeremy Powell and Tom Woller",
    howpublished = "Intel Press Release at \url{https://newsroom.intel.com/news-releases/intel-xeon-scalable-platform-built-most-sensitive-workloads/}",
    year         = 2020,
    note         = "Accessed: 2020-12-10"
}



@misc{amdsev,
    title        = "{AMD} Memory Encryption",
    author       = "David Kaplan and Jeremy Powell and Tom Woller",
    howpublished = "White paper at \url{https://developer.amd.com/wordpress/media/2013/12/AMD_Memory_Encryption_Whitepaper_v7-Public.pdf}",
    year         = 2016,
    note         = "Accessed: 2020-05-24"
}
@misc{amdsev-snp,
    title        = "{AMD SEV-SNP}: {S}trengthening {VM} {I}solation with {I}ntegrity {P}rotection and {M}ore",
    author       = "AMD",
    howpublished = "White paper at \url{https://www.amd.com/system/files/TechDocs/SEV-SNP-strengthening-vm-isolation-with-integrity-protection-and-more.pdf}",
    year         = 2020,
    note         = "Accessed: 2020-05-27"
}

@misc{azure-conf,
    title        = "Introducing {A}zure confidential computing",
    author       = "Mark Russinovich",
    howpublished = "\url{https://azure.microsoft.com/en-us/blog/introducing-azure-confidential-computing/}",
    year         = 2017,
    note         = "Accessed: 2020-05-19"
}

@misc{google-confVM,
    title        = "Confidential VM and Compute Engine",
    author       = "Google",
    howpublished = "\url{https://cloud.google.com/compute/confidential-vm/docs/about-cvm}",
    year         = 2021,
    note         = "Accessed: 2021-05-049"
}

@misc{kinetic,
    title        = "Product Manual. Seagate Kinetic HDD. Standard Model.",
    author       = "Seagate",
    howpublished = "https://www.seagate.com/www-content/product-content/hdd-fam/kinetic-hdd/\_shared/docs/kinetic-product-manual.pdf",
    year         = 2014,
    note         = "Accessed: 2020-05-19"
}

@inproceedings {haven,
    author = {Andrew Baumann and Marcus Peinado and Galen Hunt},
    title = {Shielding Applications from an Untrusted Cloud with Haven},
    booktitle = {11th {USENIX} Symposium on Operating Systems Design and Implementation ({OSDI} 14)},
    year = {2014},
    OPTisbn = { 978-1-931971-16-4},
    address = {Broomfield, CO},
    pages = {267--283},
    OPTurl = {https://www.usenix.org/conference/osdi14/technical-sessions/presentation/baumann},
    OPTpublisher = {{USENIX} Association},
    month = oct,
}

@inproceedings{vc3,
    author = {Schuster, Felix and Costa, Manuel and Fournet, Cédric and Gkantsidis, Christos and Peinado, Marcus and Mainar-Ruiz, Gloria and Russinovich, Mark},
    title = {VC3: Trustworthy Data Analytics in the Cloud using SGX},
    booktitle = {36th IEEE Symposium on Security and Privacy, S\&P 2015},
    year = {2015},
    month = may,
    OPTpublisher = {IEEE - Institute of Electrical and Electronics Engineers},
    OPTurl = {https://www.microsoft.com/en-us/research/publication/vc3-trustworthy-data-analytics-in-the-cloud-using-sgx/},
}


@inproceedings{rpmb,
    author={Anil Kumar Reddy and Periyasamy Paramasivam and Prakash Babu Vemula},
    booktitle={2015 International Conference on Computing and Network Communications (CoCoNet)},
    title={Mobile secure data protection using {eMMC RPMB} partition},
    year={2015},
    pages={946-950},
}

@inproceedings{memoir,
    author = {Parno, Bryan and Lorch, Jacob and Douceur, John and Mickens, James and McCune, Jonathan},
    year = {2011},
    month = may,
    pages = {379-394},
    title = {Memoir: Practical State Continuity for Protected Modules},
    booktitle = {32nd IEEE Symposium on Security and Privacy, S\&P 2011},
    OPTdoi = {10.1109/SP.2011.38}
}

@inproceedings {ariadne,
    author = {Raoul Strackx and Frank Piessens},
    title = {Ariadne: A Minimal Approach to State Continuity},
    booktitle = {25th {USENIX} Security Symposium ({USENIX} Security 16)},
    year = {2016},
    OPTisbn = {978-1-931971-32-4},
    address = {Austin, TX},
    pages = {875--892},
    OPTurl = {https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/strackx},
    OPTpublisher = {{USENIX} Association},
    month = aug,
}


@article{MeyerPradhan91,
    author = {Meyer, F. J. and Pradhan, D. K.},
    title = {Consensus With Dual Failure Modes},
    year = {1991},
    issue_date = {April 1991},
    publisher = {IEEE Press},
    volume = {2},
    number = {2},
    issn = {1045-9219},
    url = {https://doi.org/10.1109/71.89066},
    doi = {10.1109/71.89066},
    journal = {IEEE Trans. Parallel Distrib. Syst.},
    month = apr,
    pages = {214–222},
    numpages = {9},
    keywords = {Byzantine, dormant faults, arbitrary behavior, communications graph, distributed system, fault tolerant computing, Index Termsconsensus, distributed processing, arbitraryfaults}
}

@inproceedings{upright,
    author = {Clement, Allen and Kapritsos, Manos and Lee, Sangmin and Wang, Yang and Alvisi, Lorenzo and Dahlin, Mike and Riche, Taylor},
    title = {Upright Cluster Services},
    year = {2009},
    booktitle = {Proceedings of the ACM SIGOPS 22nd Symposium on Operating Systems Principles},
    pages = {277–290},
    location = {Big Sky, Montana, USA},
    series = {SOSP ’09}
}


@inproceedings{abd,
    author = {Attiya, Hagit and Bar-Noy, Amotz and Dolev, Danny},
    title = {Sharing Memory Robustly in Message-Passing Systems},
    year = {1990},
    booktitle = {Proceedings of the Ninth Annual ACM Symposium on Principles of Distributed Computing},
    pages = {363–375},
    location = {Quebec City, Quebec, Canada},
    series = {PODC ’90}
}

@inproceedings{pesos,
    author = {Krahn, Robert and Trach, Bohdan and Vahldiek-Oberwagner, Anjo and Knauth, Thomas and Bhatotia, Pramod and Fetzer, Christof},
    booktitle = {Proceedings of the 13th ACM European Conference on Computer Systems},
    month = apr,
    title = {Pesos: Policy Enhanced Secure Object store},
    year = {2018},
    location = {Porto, Portugal},
    series = {EuroSys ’18}
}

@inproceedings{excalibur,
    author = {Santos, Nuno and Rodrigues, Rodrigo and Gummadi, Krishna P. and Saroiu, Stefan},
    title = {Policy-Sealed Data: A New Abstraction for Building Trusted Cloud Services},
    year = {2012},
    publisher = {USENIX Association},
    booktitle = {Proceedings of the 21st USENIX Conference on Security Symposium},
    location = {Bellevue, WA},
    series = {Security’12}
}

@inproceedings{guardat,
    author = {Vahldiek-Oberwagner, Anjo and Elnogomi, Eslam and Mehta, Aastha and Garg, Deepak and Druschel, Peter and Rodrigues, Rodrigo and Gehrke, Johannes and Post, Ansley},
    year = {2015},
    month = apr,
    OPTpages = {},
    title = {Guardat: Enforcing data policies at the storage layer},
    booktitle = {Proceedings of the 10th European Conference on Computer Systems, EuroSys 2015},
    OPTdoi = {10.1145/2741948.2741958}
}

@inproceedings{Malkhi:Reiter:BQS:98,
    author = {Malkhi, Dahlia and Reiter, Michael},
    title = {Byzantine Quorum Systems},
    year = {1997},
    OPTisbn = {0897918886},
    OPTpublisher = {Association for Computing Machinery},
    OPTaddress = {New York, NY, USA},
    OPTurl = {https://doi.org/10.1145/258533.258650},
    OPTdoi = {10.1145/258533.258650},
    booktitle = {Proceedings of the Twenty-Ninth Annual ACM Symposium on Theory of Computing},
    pages = {569–578},
    OPTnumpages = {10},
    OPTlocation = {El Paso, Texas, USA},
    series = {STOC ’97}
}

@misc{anon-report,
    title       = "Removed for blind reviewing. {A}n anonymized
    version of this report can be requested through the {PC}
    chairs",
    author      = "",
    institution = "",
    number      = ""
}

@misc{netem,
    title       = "Network {E}mulation with {N}et{E}m",
    author      = "Stephen Hemminger",
    institution = "Open Source Development Lab",
    year = {2005}
}

@inproceedings{merkle,
    author = {Merkle, Ralph C.},
    title = {A Digital Signature Based on a Conventional Encryption Function},
    year = {1987}, isbn = {3540187960},
    publisher = {Springer-Verlag},
    booktitle = {A Conference on the Theory and Applications of Cryptographic Techniques on Advances in Cryptology},
    pages = {369–378},
    series = {CRYPTO ’87}
}

@inproceedings {gryff:nsdi20,
    author = {Matthew Burke and Audrey Cheng and Wyatt Lloyd},
    title = {Gryff: Unifying Consensus and Shared Registers },
    booktitle = {17th {USENIX} Symposium on Networked Systems Design and Implementation ({NSDI} 20)},
    year = {2020},
    address = {Santa Clara, CA},
    pages = {591--617},
    publisher = {{USENIX} Association},
    month = feb,
}

@inproceedings{bolosky:paxos,
  title={Paxos Replicated State Machines as the Basis of a $\{$High-Performance$\}$ Data Store},
  author={Bolosky, William J and Bradshaw, Dexter and Haagens, Randolph B and Kusters, Norbert P and Li, Peng},
  booktitle={8th USENIX Symposium on Networked Systems Design and Implementation (NSDI 11)},
  year={2011}
}

@article{flp,
    author = {Fischer, Michael J. and Lynch, Nancy A. and Paterson, Michael S.},
    title = {Impossibility of Distributed Consensus with One Faulty Process},
    year = {1985},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {32},
    number = {2},
    journal = {J. ACM},
    month = apr,
    pages = {374–382}
}

@inproceedings{ice,
    author = {Strackx, Raoul and Jacobs, Bart and Piessens, Frank},
    year = {2014},
    month = dec,
    pages = {106-115},
    title = {ICE: a passive, high-speed, state-continuity scheme},
    booktitle = {Proceedings of the 30th Annual Computer Security Applications Conference},
    location = {New Orleans, Louisiana, USA},
    series = {ACSAC ’14}
}

@misc{tpm,
    title = 	 {{TPM} Main Specification Level 2.},
    howpublished = {Trusted Computing Group. Version 1.2, Revision 116.},
    month = 	 mar,
    year = 	 {2011},
    OPTnote = 	 {},
    OPTannote = 	 {}
}

@article{lamport:byzgenerals,
    author = {Lamport, Leslie and Shostak, Robert and Pease, Marshall},
    title = {The Byzantine Generals Problem},
    year = {1982},
    publisher = {Association for Computing Machinery},
    volume = {4},
    number = {3},
    journal = {ACM Trans. Program. Lang. Syst.},
    month = jul,
    pages = {382–401},
}

@inproceedings{bc:hybrid,
    author={Michael Backes and Christian Cachin},
    booktitle={Proceedings of the 2003 International Conference on Dependable Systems and Networks},
    title={Reliable broadcast in a computational hybrid model with Byzantine faults, crashes, and recoveries},
    year={2003},
    pages={37-46},
}

@inproceedings{mc:hybrid,
    author={Miguel Correia and  Lau Cheuk Lung and Nuno F. Neves and Paulo Verissimo},
    booktitle={Proceedings of the 21st IEEE Symposium on Reliable Distributed Systems},
    title={Efficient Byzantine-resilient reliable multicast on a hybrid failure model},
    year={2002},
    pages={2-11}
}

@inproceedings{gifford:quorums,
    author = {Gifford, David K.},
    title = {Weighted Voting for Replicated Data},
    year = {1979},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    booktitle = {Proceedings of the Seventh ACM Symposium on Operating Systems Principles},
    pages = {150–162},
    location = {Pacific Grove, California, USA},
    series = {SOSP ’79}
}

@inproceedings{leases,
    author = {Gray, C. and Cheriton, D.},
    title = {Leases: An Efficient Fault-Tolerant Mechanism for Distributed File Cache Consistency},
    year = {1989},
    booktitle = {Proceedings of the Twelfth ACM Symposium on Operating Systems Principles},
    pages = {202–210},
    series = {SOSP '89}
}

@article{exponbackoff,
    author = {Metcalfe, Robert M. and Boggs, David R.},
    title = {Ethernet: Distributed Packet Switching for Local Computer Networks},
    year = {1976},
    issue_date = {July 1976},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {19},
    number = {7},
    journal = {Commun. ACM},
    month = jul,
    pages = {395–404},
    numpages = {10}
}

@inproceedings{rqs,
    author = {Guerraoui, Rachid and Vukolic, Marko},
    title = {Refined Quorum Systems},
    year = {2007},
    booktitle = {Proceedings of the Twenty-Sixth Annual ACM Symposium on Principles of Distributed Computing},
    pages = {119–128},
    location = {Portland, Oregon, USA},
    series = {PODC '07}
}

@inproceedings{fp,
    author = {Heidi Howard and Dahlia Malkhi and Alexander Spiegelman},
    title =	{{Flexible Paxos: Quorum Intersection Revisited}},
    booktitle =	{20th International Conference on Principles of Distributed Systems (OPODIS 2016)},
    pages =	{25:1--25:14},
    year = {2016}
}

@inproceedings{p2p-sgx,
      author={Jia, Yaoqi and Tople, Shruti and Moataz, Tarik and Gong, Deli and Saxena, Prateek and Liang, Zhenkai},
      booktitle={2020 IEEE 40th International Conference on Distributed Computing Systems (ICDCS)},
      title={Robust P2P Primitives Using SGX Enclaves},
      year={2020},
      pages={1185-1186},
}

@inproceedings{bft-sgx,
      author={Madsen, Mads Frederik and Gaub, Mikkel and Kirkbro, Malthe Ettrup and Debois, Søren},
      booktitle={2019 15th European Dependable Computing Conference (EDCC)},
      title={Transforming Byzantine Faults using a Trusted Execution Environment},
      year={2019},
      pages={63-70},
}

@inproceedings{a2m,
    author = {Chun, Byung-Gon and Maniatis, Petros and Shenker, Scott and Kubiatowicz, John},
    title = {Attested Append-Only Memory: Making Adversaries Stick to Their Word},
    year = {2007},
    booktitle = {Proceedings of Twenty-First ACM SIGOPS Symposium on Operating Systems Principles},
    pages = {189–204},
    numpages = {16},
    keywords = {attested append-only memory, byzantine-fault tolerance, shared storage, equivocation, replicated state machines},
    location = {Stevenson, Washington, USA},
    series = {SOSP '07}
}

@inproceedings{trinc,
    author = {Levin, Dave and Douceur, John R. and Lorch, Jacob R. and Moscibroda, Thomas},
    title = {TrInc: Small Trusted Hardware for Large Distributed Systems},
    year = {2009},
    publisher = {USENIX Association},
    booktitle = {Proceedings of the 6th USENIX Symposium on Networked Systems Design and Implementation},
    pages = {1–14},
    numpages = {14},
    location = {Boston, Massachusetts},
    series = {NSDI'09}
}

@inproceedings{teechain,
    author = {Lind, Joshua and Naor, Oded and Eyal, Ittay and Kelbert, Florian and Sirer, Emin G\"{u}n and Pietzuch, Peter},
    title = {Teechain: A Secure Payment Network with Asynchronous Blockchain Access},
    year = {2019},
    isbn = {9781450368735},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/3341301.3359627},
    doi = {10.1145/3341301.3359627},
    abstract = {Blockchains such as Bitcoin and Ethereum execute payment transactions securely, but
    their performance is limited by the need for global consensus. Payment networks overcome
    this limitation through off-chain transactions. Instead of writing to the blockchain
    for each transaction, they only settle the final payment balances with the underlying
    blockchain. When executing off-chain transactions in current payment networks, parties
    must access the blockchain within bounded time to detect misbehaving parties that
    deviate from the protocol. This opens a window for attacks in which a malicious party
    can steal funds by deliberately delaying other parties' blockchain access and prevents
    parties from using payment networks when disconnected from the blockchain.We present
    Teechain, the first layer-two payment network that executes off-chain transactions
    asynchronously with respect to the underlying blockchain. To prevent parties from
    misbehaving, Teechain uses treasuries, protected by hardware trusted execution environments
    (TEEs), to establish off-chain payment channels between parties. Treasuries maintain
    collateral funds and can exchange transactions efficiently and securely, without interacting
    with the underlying blockchain. To mitigate against treasury failures and to avoid
    having to trust all TEEs, Teechain replicates the state of treasuries using committee
    chains, a new variant of chain replication with threshold secret sharing. Teechain
    achieves at least a 33X higher transaction throughput than the state-of-the-art Lightning
    payment network. A 30-machine Teechain deployment can handle over 1 million Bitcoin
    transactions per second.},
    booktitle = {Proceedings of the 27th ACM Symposium on Operating Systems Principles},
    pages = {63–79},
    numpages = {17},
    location = {Huntsville, Ontario, Canada},
    series = {SOSP '19}
}

@INPROCEEDINGS{lorenzo:framework,
  author={{Jean-Philippe} Martin and Lorenzo Alvisi},
  booktitle={Proceedings of the 2004 International Conference on Dependable Systems and Networks},
  title={A framework for dynamic {B}yzantine storage},
  year={2004},
  publisher={IEEE},
  pages={325-334}
}

@Article{paxos,
    author = {Lamport, Leslie},
    title = {The Part-Time Parliament},
    year = {1998},
    month = {May},
    url = {https://www.microsoft.com/en-us/research/publication/part-time-parliament/},
    journal = {ACM Transactions on Computer Systems 16, 2 (May 1998), 133-169. Also appeared as SRC Research Report 49. This paper was first submitted in 1990, setting a personal record for publication delay that has since been broken by [60].},
    edition = {ACM Transactions on Computer Systems 16, 2 (May 1998), 133-169. Also appeared as SRC Research Report 49. This paper was first submitted in 1990, setting a personal record for publication delay that has since been broken by [60].},
    note = {ACM SIGOPS Hall of Fame Award in 2012},
}

@article{pmmc,
author = {Van Renesse, Robbert and Altinbuken, Deniz},
title = {Paxos Made Moderately Complex},
year = {2015},
issue_date = {April 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {47},
number = {3},
journal = {ACM Comput. Surv.},
month = {feb},
}


@inproceedings{pbft,
author = {Castro, Miguel and Liskov, Barbara},
title = {Practical Byzantine Fault Tolerance},
year = {1999},
publisher = {USENIX Association},
booktitle = {Proceedings of the Third Symposium on Operating Systems Design and Implementation},
pages = {173–186},
location = {New Orleans, Louisiana, USA},
series = {OSDI '99}
}

@inproceedings{paxos_builders,
author = {Kirsch, Jonathan and Amir, Yair},
title = {Paxos for System Builders: An Overview},
year = {2008},
booktitle = {Proceedings of the 2nd Workshop on Large-Scale Distributed Systems and Middleware},
location = {Yorktown Heights, New York, USA},
series = {LADIS '08}
}


@misc{arm-cca,
    title        = "Arm CCA will put confidential compute in the hands of every developer",
    author       = "Richard Grisenthwaite",
    howpublished = "\url{https://www.arm.com/company/news/2021/06/arm-cca-will-put-confidential-compute-in-the-hands-of-every-developer}",
    year         = 2021,
month = jun,
    note         = "Accessed: 2020-12-14"
}

@article{mac,
author = {Tsudik, Gene},
title = {Message Authentication with One-Way Hash Functions},
year = {1992},
issue_date = {Oct. 1992},
publisher = {Association for Computing Machinery},
volume = {22},
number = {5},
journal = {SIGCOMM Comput. Commun. Rev.},
month = {oct},
pages = {29–38},
}

@inproceedings{plundervolt,
    author={Murdock, Kit and Oswald, David and Garcia, Flavio D. and Van Bulck, Jo
    and Gruss, Daniel and Piessens, Frank},
    booktitle = {{Proceedings of the 41st IEEE Symposium on Security and Privacy (S\&P'20)}},
    title={{Plundervolt}: Software-based Fault Injection Attacks against Intel SGX},
    booktitle = {41st IEEE Symposium on Security and Privacy (S\&P'20)},
    year = {2020},
}

@article{sgxpectre,
  author={Chen, Guoxing and Chen, Sanchuan and Xiao, Yuan and Zhang, Yinqian and Lin, Zhiqiang and Lai, Ten-Hwang},
  journal={IEEE Security   Privacy},
  title={SgxPectre: Stealing Intel Secrets From SGX Enclaves via Speculative Execution},
  year={2020},
  volume={18},
  number={3},
  pages={28-37},
  doi={10.1109/MSEC.2019.2963021}
}

@article{zombieload,
place = { Country unknown/Code not available}, title = {ZombieLoad: Cross-Privilege-Boundary Data Sampling}, url = {https://par.nsf.gov/biblio/10295738}, DOI = {10.1145/3319535.3354252}, abstractNote = {In early 2018, Meltdown first showed how to read arbitrary kernel memory from user space by exploiting side-effects from transient instructions. While this attack has been mitigated through stronger isolation boundaries between user and kernel space, Meltdown inspired an entirely new class of fault-driven transient-execution attacks. Particularly, over the past year, Meltdown-type attacks have been extended to not only leak data from the L1 cache but also from various other microarchitectural structures, including the FPU register file and store buffer. In this paper, we present the ZombieLoad attack which uncovers a novel Meltdown-type effect in the processor’s fill-buffer logic. Our analysis shows that faulting load instructions (i.e., loads that have to be re-issued) may transiently dereference unauthorized destinations previously brought into the fill buffer by the current or a sibling logical CPU. In contrast to concurrent attacks on the fill buffer, we are the first to report data leakage of recently loaded and stored stale values across logical cores even on Meltdown- and MDS-resistant processors. Hence, despite Intel’s claims [36], we show that the hardware fixes in new CPUs are not sufficient. We demonstrate ZombieLoad’s effectiveness in a multitude of practical attack scenarios across CPU privilege rings, OS processes, virtual machines, and SGX enclaves. We discuss both short and long-term mitigation approaches and arrive at the conclusion that disabling hyperthreading is the only possible workaround to prevent at least the most-powerful cross-hyperthread attack scenarios on current processors, as Intel’s software fixes are incomplete.}, journal = {USENIX Security 2020}, author = {Schwarz, Michael and Lipp, Moritz and Moghimi, Daniel and Van Bulck, Jo and Stecklina, Julian and Prescher, Thomas and Gruss, Daniel},
}

@inproceedings{undeserved,
  author={Wilke, Luca and Wichelmann, Jan and Sieck, Florian and Eisenbarth, Thomas},
  booktitle={2021 IEEE Security and Privacy Workshops (SPW)},
  title={undeSErVed trust: Exploiting Permutation-Agnostic Remote Attestation},
  year={2021},
  volume={},
  number={},
  pages={456-466},
  doi={10.1109/SPW53761.2021.00064}
}

@book{nancy-book,
  author = {Lynch, Nancy A.},
  publisher = {Morgan Kaufmann},
  title = {Distributed Algorithms},
  year = 1996
}

@inproceedings{fork_lcm,
  title={Rollback and forking detection for trusted execution environments using lightweight collective memory},
  author={Brandenburger, Marcus and Cachin, Christian and Lorenz, Matthias and Kapitza, R{\"u}diger},
  booktitle={2017 47th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)},
  pages={157--168},
  year={2017},
  organization={IEEE}
}

@article{fork_verify,
  title={Don’t trust the cloud, verify: Integrity and consistency for cloud object stores},
  author={Brandenburger, Marcus and Cachin, Christian and Kne{\v{z}}evi{\'c}, Nikola},
  journal={ACM Transactions on Privacy and Security (TOPS)},
  volume={20},
  number={3},
  pages={1--30},
  year={2017},
  publisher={ACM New York, NY, USA}
}

@article{fork_fail,
  title={Fail-aware untrusted storage},
  author={Cachin, Christian and Keidar, Idit and Shraer, Alexander},
  journal={SIAM Journal on Computing},
  volume={40},
  number={2},
  pages={493--533},
  year={2011},
  publisher={SIAM}
}

@inproceedings{fork_comm,
  title={Verifying the consistency of remote untrusted services with commutative operations},
  author={Cachin, Christian and Ohrimenko, Olga},
  booktitle={International Conference on Principles of Distributed Systems},
  pages={1--16},
  year={2014},
  organization={Springer}
}

@inproceedings{fork_sporc,
  title={$\{$SPORC$\}$: Group Collaboration using Untrusted Cloud Resources},
  author={Feldman, Ariel J and Zeller, William P and Freedman, Michael J and Felten, Edward W},
  booktitle={9th USENIX Symposium on Operating Systems Design and Implementation (OSDI 10)},
  year={2010}
}

@inproceedings{fork_fs,
  title={Building secure file systems out of Byzantine storage},
  author={Mazieres, David and Shasha, Dennis},
  booktitle={Proceedings of the twenty-first annual symposium on Principles of distributed computing},
  pages={108--117},
  year={2002}
}

@inproceedings{fork_venus,
  title={Venus: Verification for untrusted cloud storage},
  author={Shraer, Alexander and Cachin, Christian and Cidon, Asaf and Keidar, Idit and Michalevsky, Yan and Shaket, Dani},
  booktitle={Proceedings of the 2010 ACM workshop on Cloud computing security workshop},
  pages={19--30},
  year={2010}
}

@misc{ec2,
  title={Amazon elastic compute cloud},
  author={Cloud, Compute},
  year={2009}
}

@article{paxos_simple,
author = {Lamport, Leslie},
title = {Paxos Made Simple},
year = {2001},
month = {December},
pages = {51-58},
journal = {ACM SIGACT News (Distributed Computing Column) 32, 4 (Whole Number 121, December 2001)},
}

@inproceedings{paxos_engineering,
author = {Chandra, Tushar D. and Griesemer, Robert and Redstone, Joshua},
title = {Paxos Made Live: An Engineering Perspective},
year = {2007},
booktitle = {Proceedings of the Twenty-Sixth Annual ACM Symposium on Principles of Distributed Computing},
pages = {398–407},
location = {Portland, Oregon, USA},
series = {PODC '07}
}

@inproceedings{asymmetric_trust,
  title={Asymmetric distributed trust},
  author={Cachin, Christian},
  booktitle={International Conference on Distributed Computing and Networking 2021},
  pages={3--3},
  year={2021}
}

@inproceedings{wheat,
  title={Separating the WHEAT from the chaff: An empirical design for geo-replicated state machines},
  author={Sousa, Jo{\~a}o and Bessani, Alysson},
  booktitle={2015 IEEE 34th Symposium on Reliable Distributed Systems (SRDS)},
  pages={146--155},
  year={2015},
  organization={IEEE}
}

@article{grid_quorums,
    author = {Cheung, S. Y. and Ammar, M. H. and Ahamad, M.},
    title = {The Grid Protocol: A High Performance Scheme for Maintaining Replicated Data},
    year = {1992},
    issue_date = {December 1992},
    publisher = {IEEE Educational Activities Department},
    address = {USA},
    volume = {4},
    number = {6},
    issn = {1041-4347},
    url = {https://doi.org/10.1109/69.180609},
    doi = {10.1109/69.180609},
    abstract = {A new protocol for maintaining replicated data that can provide both high data availability and low response time is presented. In the protocol, the nodes are organized in a logical grid. Existing protocols are designed primarily to achieve high availability by updating a large fraction of the copies, which provides some (although not significant) load sharing. In the new protocol, transaction processing is shared effectively among nodes storing copies of the data, and both the response time experienced by transactions and the system throughput are improved significantly. The authors analyze the availability of the new protocol and use simulation to study the effect of load sharing on the response time of transactions. They also compare the new protocol with a voting-based scheme.},
    journal = {IEEE Trans. on Knowl. and Data Eng.},
    month = {dec},
    pages = {582–592},
    numpages = {11},
    keywords = {voting-based scheme, grid protocol, transaction processing, distributed databases, load sharing, high data availability, system throughput, replicated data maintenance, distributed database, simulation, low response time, database theory}
}

@inproceedings{weighted_voting,
    author = {Gifford, David K.},
    title = {Weighted Voting for Replicated Data},
    year = {1979},
    isbn = {0897910095},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/800215.806583},
    doi = {10.1145/800215.806583},
    abstract = {In a new algorithm for maintaining replicated data, every copy of a replicated file is assigned some number of votes. Every transaction collects a read quorum of rvotes to read a file, and a write quorum of wvotes to write a file, such that r+w is greater than the total number of votes assigned to the file. This ensures that there is a non-null intersection between every read quorum and every write quorum. Version numbers make it possible to determine which copies are current. The reliability and performance characteristics of a replicated file can be controlled by appropriately choosing r, w, and the file's voting configuration. The algorithm guarantees serial consistency, admits temporary copies in a natural way by the introduction of copies with no votes, and has been implemented in the context of an application system called Violet.},
    booktitle = {Proceedings of the Seventh ACM Symposium on Operating Systems Principles},
    pages = {150–162},
    numpages = {13},
    keywords = {File suite, Locking, File system, Representative, Replicated data, Weighted voting, Quorum, Transaction, Computer network, Weak representative},
    location = {Pacific Grove, California, USA},
    series = {SOSP '79}
}

@article{linearizability,
    author = {Herlihy, Maurice P. and Wing, Jeannette M.},
    title = {Linearizability: A Correctness Condition for Concurrent Objects},
    year = {1990},
    issue_date = {July 1990},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {12},
    number = {3},
    issn = {0164-0925},
    url = {https://doi.org/10.1145/78969.78972},
    doi = {10.1145/78969.78972},
    abstract = {A concurrent object is a data object shared by concurrent processes. Linearizability is a correctness condition for concurrent objects that exploits the semantics of abstract data types. It permits a high degree of concurrency, yet it permits programmers to specify and reason about concurrent objects using known techniques from the sequential domain. Linearizability provides the illusion that each operation applied by concurrent processes takes effect instantaneously at some point between its invocation and its response, implying that the meaning of a concurrent object's operations can be given by pre- and post-conditions. This paper defines linearizability, compares it to other correctness conditions, presents and demonstrates a method for proving the correctness of implementations, and shows how to reason about concurrent objects, given they are linearizable.},
    journal = {ACM Trans. Program. Lang. Syst.},
    month = {jul},
    pages = {463–492},
    numpages = {30}
}

@techreport{polynomial-communication,
  title={Polynomial end-to-end communication},
  author={Awerbuch, Baruch and Mansour, Yishay and Shavit, Nir},
  year={1989},
  institution={MASSACHUSETTS INST OF TECH CAMBRIDGE LAB FOR COMPUTER SCIENCE}
}

@article{crash-recovery,
  title={A formal model of crash recovery in a distributed system},
  author={Skeen, Dale and Stonebraker, Michael},
  journal={IEEE Transactions on Software Engineering},
  number={3},
  pages={219--228},
  year={1983},
  publisher={IEEE}
}

@inproceedings{perfect-failure-impossible,
  title={On the impossibility of implementing perpetual failure detectors in partially synchronous systems},
  author={Larrea, Mikel and Fern{\'a}ndez, Antonio and Ar{\'e}valo, Sergio},
  booktitle={Proceedings 10th Euromicro Workshop on Parallel, Distributed and Network-based Processing},
  pages={99--105},
  year={2002},
  organization={IEEE}
}

@article{byz_fault_tolerant,
author = {Abd-El-Malek, Michael and Ganger, Gregory R. and Goodson, Garth R. and Reiter, Michael K. and Wylie, Jay J.},
title = {Fault-Scalable Byzantine Fault-Tolerant Services},
year = {2005},
issue_date = {December 2005},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {39},
number = {5},
issn = {0163-5980},
url = {https://doi.org/10.1145/1095809.1095817},
doi = {10.1145/1095809.1095817},
abstract = {A fault-scalable service can be configured to tolerate increasing numbers of faults without significant decreases in performance. The Query/Update (Q/U) protocol is a new tool that enables construction of fault-scalable Byzantine fault-tolerant services. The optimistic quorum-based nature of the Q/U protocol allows it to provide better throughput and fault-scalability than replicated state machines using agreement-based protocols. A prototype service built using the Q/U protocol outperforms the same service built using a popular replicated state machine implementation at all system sizes in experiments that permit an optimistic execution. Moreover, the performance of the Q/U protocol decreases by only 36% as the number of Byzantine faults tolerated increases from one to five, whereas the performance of the replicated state machine decreases by 83%.},
journal = {SIGOPS Oper. Syst. Rev.},
month = {oct},
pages = {59–74},
numpages = {16},
keywords = {services, replicated state machines, byzantine fault-tolerance, quorums, fault-scalability}
}

@inproceedings{hq,
author = {Cowling, James and Myers, Daniel and Liskov, Barbara and Rodrigues, Rodrigo and Shrira, Liuba},
title = {HQ Replication: A Hybrid Quorum Protocol for Byzantine Fault Tolerance},
year = {2006},
isbn = {1931971471},
publisher = {USENIX Association},
address = {USA},
abstract = {There are currently two approaches to providing Byzantine-fault-tolerant state machine replication: a replica-based approach, e.g., BFT, that uses communication between replicas to agree on a proposed ordering of requests, and a quorum-based approach, such as Q/U, in which clients contact replicas directly to optimistically execute operations. Both approaches have shortcomings: the quadratic cost of inter-replica communication is un-necessary when there is no contention, and Q/U requires a large number of replicas and performs poorly under contention.We present HQ, a hybrid Byzantine-fault-tolerant state machine replication protocol that overcomes these problems. HQ employs a lightweight quorum-based protocol when there is no contention, but uses BFT to resolve contention when it arises. Furthermore, HQ uses only 3f + 1 replicas to tolerate f faults, providing optimal resilience to node failures.We implemented a prototype of HQ, and we compare its performance to BFT and Q/U analytically and experimentally. Additionally, in this work we use a new implementation of BFT designed to scale as the number of faults increases. Our results show that both HQ and our new implementation of BFT scale as f increases; additionally our hybrid approach of using BFT to handle contention works well.},
booktitle = {Proceedings of the 7th Symposium on Operating Systems Design and Implementation},
pages = {177–190},
numpages = {14},
location = {Seattle, Washington},
series = {OSDI '06}
}

@article{zyzzyva,
author = {Kotla, Ramakrishna and Alvisi, Lorenzo and Dahlin, Mike and Clement, Allen and Wong, Edmund},
title = {Zyzzyva: Speculative Byzantine Fault Tolerance},
year = {2010},
issue_date = {December 2009},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {27},
number = {4},
issn = {0734-2071},
url = {https://doi.org/10.1145/1658357.1658358},
doi = {10.1145/1658357.1658358},
abstract = {A longstanding vision in distributed systems is to build reliable systems from unreliable components. An enticing formulation of this vision is Byzantine Fault-Tolerant (BFT) state machine replication, in which a group of servers collectively act as a correct server even if some of the servers misbehave or malfunction in arbitrary (“Byzantine”) ways. Despite this promise, practitioners hesitate to deploy BFT systems, at least partly because of the perception that BFT must impose high overheads.In this article, we present Zyzzyva, a protocol that uses speculation to reduce the cost of BFT replication. In Zyzzyva, replicas reply to a client's request without first running an expensive three-phase commit protocol to agree on the order to process requests. Instead, they optimistically adopt the order proposed by a primary server, process the request, and reply immediately to the client. If the primary is faulty, replicas can become temporarily inconsistent with one another, but clients detect inconsistencies, help correct replicas converge on a single total ordering of requests, and only rely on responses that are consistent with this total order. This approach allows Zyzzyva to reduce replication overheads to near their theoretical minima and to achieve throughputs of tens of thousands of requests per second, making BFT replication practical for a broad range of demanding services.},
journal = {ACM Trans. Comput. Syst.},
month = {jan},
articleno = {7},
numpages = {39},
keywords = {output commit, speculative execution, Byzantine fault tolerance, replication}
}

@article{time_efficient_abd,
  title={Time-efficient read/write register in crash-prone asynchronous message-passing systems},
  author={Most{\'e}faoui, Achour and Raynal, Michel and Roy, Matthieu},
  journal={Computing},
  volume={101},
  number={1},
  pages={3--17},
  year={2019},
  publisher={Springer}
}


@article{fast-paxos,
  title={Fast paxos},
  author={Lamport, Leslie},
  journal={Distributed Computing},
  volume={19},
  number={2},
  pages={79--103},
  year={2006},
  publisher={Springer}
}

@article{disk-paxos,
  title={Disk paxos},
  author={Gafni, Eli and Lamport, Leslie},
  journal={Distributed Computing},
  volume={16},
  number={1},
  pages={1--20},
  year={2003},
  publisher={Springer}
}

@article{paxos-simple,
  title={Paxos made simple},
  author={Lamport, Leslie and others},
  journal={ACM Sigact News},
  volume={32},
  number={4},
  pages={18--25},
  year={2001}
}

@inproceedings{egalitarian-paxos,
  title={Egalitarian paxos},
  author={Moraru, Iulian and Andersen, David G and Kaminsky, Michael},
  booktitle={ACM Symposium on Operating Systems Principles},
  year={2012}
}

@inproceedings{gaios,
  title={Paxos replicated state machines as the basis of a high-performance data store},
  author={Bolosky, William J and Bradshaw, Dexter and Haagens, Randolph B and Kusters, Norbert P and Li, Peng},
  booktitle={Proc. NSDI’11, USENIX Conference on Networked Systems Design and Implementation},
  pages={141--154},
  year={2011}
}

@article{recovery-paxos,
  author={Kończak, Jan and Wojciechowski, Paweł T. and Santos, Nuno and Żurkowski, Tomasz and Schiper, André},
  journal={IEEE Transactions on Dependable and Secure Computing},
  title={Recovery Algorithms for Paxos-Based State Machine Replication},
  year={2021},
  volume={18},
  number={2},
  pages={623-640},
  doi={10.1109/TDSC.2019.2926723}
}

@techreport{winter,
  title={Deconstructing paxos},
  author={Boichat, Romain and Dutta, Partha and Frolund, Svend and Guerraoui, Rachid},
  year={2001}
}

@article{raft,
  title={The raft consensus algorithm},
  author={Ongaro, Diego and Ousterhout, John},
  year={2015},
  publisher={March}
}
@article{schneider-smr,
  title={Implementing fault-tolerant services using the state machine approach: A tutorial},
  author={Schneider, Fred B},
  journal={ACM Computing Surveys (CSUR)},
  volume={22},
  number={4},
  pages={299--319},
  year={1990},
  publisher={ACM New York, NY, USA}
}

@incollection{consensus-recovery,
  title={Consensus in asynchronous distributed systems: A concise guided tour},
  author={Guerraoui, Rachid and Hurfinn, Michel and Most{\'e}faoui, Achour and Oliveira, Riucarlos and Raynal, Michel and Schiper, Andr{\'e}},
  booktitle={Advances in Distributed Systems},
  pages={33--47},
  year={2000},
  publisher={Springer}
}

@inproceedings{bqs,
    author = {Malkhi, Dahlia and Reiter, Michael},
    title = {Byzantine Quorum Systems},
    year = {1997},
    OPTisbn = {0897918886},
    OPTpublisher = {Association for Computing Machinery},
    OPTaddress = {New York, NY, USA},
    OPTurl = {https://doi.org/10.1145/258533.258650},
    OPTdoi = {10.1145/258533.258650},
    booktitle = {Proceedings of the Twenty-Ninth Annual ACM Symposium on Theory of Computing},
    pages = {569–578},
    OPTnumpages = {10},
    OPTlocation = {El Paso, Texas, USA},
    series = {STOC ’97}
}

@misc{sloth,
  author = {Dinis, Baltasar},
  title = {Sloth},
  year = {2022},
  publisher = {GitLab},
  abstract = {An easy-to-use, granular, traffic shaping tool based on Linux's tc. Written in python3.},
  journal = {GitLab repository},
  howpublished = {\url{https://gitlab.mpi-sws.org/bdinisa/sloth}},
}
